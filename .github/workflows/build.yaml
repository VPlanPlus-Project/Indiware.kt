name: Release

on:
    push:
        branches:
            - main

permissions:
    contents: write
    id-token: write
    packages: write

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Restore Gradle cache
                id: restore-gradle-cache
                uses: actions/cache/restore@v4
                with:
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.versions.toml', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper

            -   name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: '21'

            -   name: Determine new tag
                id: tag
                run: |
                    # Hole aktuelles Jahr und Monat
                    YEAR=$(date +'%Y')
                    MONTH=$(date +'%m')
                    
                    # Suche existierende Tags, die mit vYYYY.mm. beginnen
                    TAG_PREFIX="v${YEAR}.${MONTH}."
                    
                    # Finde höchste Index
                    LAST_INDEX=$(git tag --list "${TAG_PREFIX}*" | \
                      sed -E "s/${TAG_PREFIX}([0-9]+)/\1/" | sort -n | tail -1)
                    
                    if [ -z "$LAST_INDEX" ]; then
                      NEW_INDEX=1
                    else
                      NEW_INDEX=$((LAST_INDEX + 1))
                    fi
                    
                    NEW_TAG="${TAG_PREFIX}${NEW_INDEX}"
                    
                    echo "New tag: $NEW_TAG"
                    
                    # Setze Output für nächsten Schritte
                    echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
                    # Schreibe Version in local.properties
                    echo "version=$NEW_TAG" >> ${{ github.workspace }}/local.properties

            -   name: Create and push tag
                run: |
                    git config user.name "github-actions[bot]"
                    git config user.email "github-actions[bot]@users.noreply.github.com"
                    
                    git tag ${{ steps.tag.outputs.new_tag }}
                    git push origin ${{ steps.tag.outputs.new_tag }}
            -   name: Publish to Maven
                env:
                    MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
                    MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
                run: ./gradlew publishAllPublicationsToReleasesRepository

            -   name: Save Gradle cache
                uses: actions/cache/save@v4
                if: steps.restore-gradle-cache.outputs.cache-hit != 'true'
                with:
                    key: ${{ steps.restore-gradle-cache.outputs.cache-primary-key }}
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper